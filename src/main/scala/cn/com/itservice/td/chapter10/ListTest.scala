package cn.com.itservice.td.chapter10

import scala.collection.mutable.ListBuffer

object ListTest {
  def main(args: Array[String]): Unit = {
    //  var list1=new List();
    var list1 = List(1, 2, 3);
    println(list1);
    var list2 = 1 :: list1;
    println(list2)
    var list3 = list1 ::: list2;
    println(list3)
    var list4 = list1 :: list2;
    println(list4)
    var list5 = list1 :+ 1
    println(list5)
    var list6 = 1 +: list1
    println(list6)
    var list7 = list1 ++ list2
    println("list7============>" + list7)
    var list8 = list1 :: 100 :: 101 :: 102 :: Nil
    println(list8)

    println("*************************< :+ >******************************")
    println(list1 :+ 100)
    println("*************************< fill >******************************")
    println(List.fill(3)("foo"))
    println("*************************< fill >******************************")
    println(List.fill(6, 5, 4, 3, 2)("foo"))
    println("*************************< ListBuffer >******************************")
    var listb1 = new ListBuffer[Int];
    listb1 :+ 1;
    listb1 :+ 2;
    println(listb1)
    println("*************************< += >******************************")
    var listb2 = new ListBuffer[Int]
    listb2 += 1;
    listb2 += 2;
    println(listb2)
    println("*************************< :+ >******************************")
    println(listb2 :+ 3)
    println(listb2 :+ 4)
    println(listb2)

    println("*************************< +=: >******************************")
    println(100 +=: listb2)
    println(100 +=: listb2)
    println(listb2)
    println("*************************< ++=: >******************************")
    var listb3 = ListBuffer[Int](1, 2, 3)
    var listb4 = ListBuffer[Int](4, 5, 6)
    listb3 ++=: listb4
    println(listb3)
    println(listb4)
    println("*************************< ++= >******************************")
    var listb5 = ListBuffer[Int](1, 2, 3)
    var listb6 = ListBuffer[Int](4, 5, 6)
    listb5 ++= listb6
    println(listb5)
    println(listb6)
    println("*************************< --= >******************************")
    listb5 --= listb6
    println(listb5)
    println("*************************< -= >******************************")
    println(listb5 -= 1);
    println(listb5)
    listb5 -= (2, 3)
    println(listb5)
    println("*************************< LazyList >******************************")
    //      var lazy1=new LazyList[BigDecimal]()
    var lazy1 = BigDecimal(1)#::BigDecimal(2)#::BigDecimal(3)#::LazyList.empty

    println(lazy1 take 3)
    lazy1 foreach println
    println("*************************< range >******************************")
    var early1=(1 to 10)
    println(early1)
    var lazy2=(1 to 10).to(LazyList)
    println(lazy2)
    lazy2 foreach println
    println("*************************< Array.ofDim >******************************")
    var array1=Array.ofDim[String](2,3)
    array1(0)(0)="a"
    array1(0)(1)="b"
    array1(0)(2)="c"
    array1(1)(0)="d"
    array1(1)(1)="e"
    array1(1)(2)="f"
    for(a <- array1;b <- a){
      println(b)
    }
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
    println("*************************<  >******************************")
  }

}
